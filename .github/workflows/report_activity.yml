name: Report Activity

on:
  workflow_dispatch:
    inputs:
      run_type:
        description: 'Type of report to run'
        required: true
        default: 'both'
        type: choice
        options:
          - both
          - kpi
          - activity

jobs:
  run-reports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run KPI Premia Report
        if: ${{ github.event.inputs.run_type == 'both' || github.event.inputs.run_type == 'kpi' }}
        env:
          SUPABASE_CONNECTION_STRING: postgresql://${{ secrets.SUPABASE_USER }}:${{ secrets.SUPABASE_PASSWORD }}@${{ secrets.SUPABASE_HOST }}:${{ secrets.SUPABASE_PORT }}/${{ secrets.SUPABASE_DB }}
          SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
          SUPABASE_DB: ${{ secrets.SUPABASE_DB }}
          SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
          SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
          SUPABASE_PORT: ${{ secrets.SUPABASE_PORT }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "[REPORT] Starting bonus (premia) report generation..."
          echo "Environment variables:"
          echo "SUPABASE_CONNECTION_STRING: ${SUPABASE_CONNECTION_STRING:+set}"
          echo "SUPABASE_HOST: ${SUPABASE_HOST:+set}"
          echo "SUPABASE_DB: ${SUPABASE_DB:+set}"
          echo "SUPABASE_USER: ${SUPABASE_USER:+set}"
          echo "SUPABASE_PASSWORD: ${SUPABASE_PASSWORD:+set}"
          echo "SUPABASE_PORT: ${SUPABASE_PORT:+set}"
          echo "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:+set}"
          echo "TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID:+set}"
          
          if ! python -u scripts/report_bonus.py; then
            echo "::error::Failed to generate KPI premia report"
            exit 1
          fi

      - name: Run Daily Activity Report
        if: ${{ github.event.inputs.run_type == 'both' || github.event.inputs.run_type == 'activity' }}
        env:
          SUPABASE_CONNECTION_STRING: postgresql://${{ secrets.SUPABASE_USER }}:${{ secrets.SUPABASE_PASSWORD }}@${{ secrets.SUPABASE_HOST }}:${{ secrets.SUPABASE_PORT }}/${{ secrets.SUPABASE_DB }}
          SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
          SUPABASE_DB: ${{ secrets.SUPABASE_DB }}
          SUPABASE_USER: ${{ secrets.SUPABASE_USER }}
          SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
          SUPABASE_PORT: ${{ secrets.SUPABASE_PORT }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "[REPORT] Starting daily activity report generation..."
          echo "Environment variables:"
          echo "SUPABASE_CONNECTION_STRING: ${SUPABASE_CONNECTION_STRING:+set}"
          echo "SUPABASE_HOST: ${SUPABASE_HOST:+set}"
          echo "SUPABASE_DB: ${SUPABASE_DB:+set}"
          echo "SUPABASE_USER: ${SUPABASE_USER:+set}"
          echo "SUPABASE_PASSWORD: ${SUPABASE_PASSWORD:+set}"
          echo "SUPABASE_PORT: ${SUPABASE_PORT:+set}"
          echo "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:+set}"
          echo "TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID:+set}"
          
          if ! python -u scripts/report_activity.py; then
            echo "::error::Failed to send daily activity report"
            exit 1
          fi 