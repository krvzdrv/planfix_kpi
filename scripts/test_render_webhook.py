#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã webhook —á–µ—Ä–µ–∑ Render
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python scripts/test_render_webhook.py <RENDER_URL>
"""

import sys
import requests
import json
from datetime import datetime

def test_health_check(render_url: str):
    """–¢–µ—Å—Ç health check endpoint"""
    try:
        response = requests.get(f"{render_url}/health", timeout=10)
        print(f"üè• Health check: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Status: {data.get('status')}")
            print(f"   Service: {data.get('service')}")
            print(f"   GitHub Repo: {data.get('github_repo')}")
            return True
        else:
            print(f"   Error: {response.text}")
            return False
    except Exception as e:
        print(f"   Error: {e}")
        return False

def test_root_endpoint(render_url: str):
    """–¢–µ—Å—Ç root endpoint"""
    try:
        response = requests.get(render_url, timeout=10)
        print(f"üè† Root endpoint: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Service: {data.get('service')}")
            print(f"   Version: {data.get('version')}")
            return True
        else:
            print(f"   Error: {response.text}")
            return False
    except Exception as e:
        print(f"   Error: {e}")
        return False

def test_webhook_endpoint(render_url: str):
    """–¢–µ—Å—Ç webhook endpoint"""
    try:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram
        test_data = {
            "message": {
                "text": "/premia_current",
                "chat": {"id": "123456789"},
                "from": {"id": "987654321", "first_name": "Test User"}
            }
        }
        
        response = requests.post(
            f"{render_url}/api/telegram_webhook",
            json=test_data,
            timeout=10
        )
        
        print(f"ü§ñ Webhook test: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Status: {data.get('status')}")
            print(f"   Message: {data.get('message')}")
            return True
        else:
            print(f"   Error: {response.text}")
            return False
    except Exception as e:
        print(f"   Error: {e}")
        return False

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python scripts/test_render_webhook.py <RENDER_URL>")
        print("–ü—Ä–∏–º–µ—Ä: python scripts/test_render_webhook.py https://your-app.onrender.com")
        return
    
    render_url = sys.argv[1].rstrip('/')
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Render Webhook")
    print("=" * 40)
    print(f"URL: {render_url}")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints
    health_ok = test_health_check(render_url)
    print()
    
    root_ok = test_root_endpoint(render_url)
    print()
    
    webhook_ok = test_webhook_endpoint(render_url)
    print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("=" * 40)
    print(f"Health check: {'‚úÖ OK' if health_ok else '‚ùå FAIL'}")
    print(f"Root endpoint: {'‚úÖ OK' if root_ok else '‚ùå FAIL'}")
    print(f"Webhook endpoint: {'‚úÖ OK' if webhook_ok else '‚ùå FAIL'}")
    
    if health_ok and root_ok and webhook_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("Render —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Render —Å–µ—Ä–≤–∏—Å–∞.")

if __name__ == "__main__":
    main() 