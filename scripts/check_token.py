#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 scripts/check_token.py <your_token>
"""

import sys
import requests

def check_token(token):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞"""
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json",
        "User-Agent": "Planfix-KPI-Token-Check/1.0"
    }
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        response = requests.get("https://api.github.com/user", headers=headers)
        
        print(f"üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞: {response.status_code}")
        
        if response.status_code == 200:
            user_data = response.json()
            print(f"‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('login')}")
            print(f"   –ò–º—è: {user_data.get('name')}")
            print(f"   Email: {user_data.get('email')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
            scopes = response.headers.get('X-OAuth-Scopes', '')
            print(f"   –ü—Ä–∞–≤–∞: {scopes}")
            
            if 'repo' in scopes:
                print("   ‚úÖ –ï—Å—Ç—å –ø—Ä–∞–≤–∞ repo")
            else:
                print("   ‚ùå –ù–µ—Ç –ø—Ä–∞–≤ repo")
                
            if 'workflow' in scopes:
                print("   ‚úÖ –ï—Å—Ç—å –ø—Ä–∞–≤–∞ workflow")
            else:
                print("   ‚ùå –ù–µ—Ç –ø—Ä–∞–≤ workflow")
                
            return True
        elif response.status_code == 401:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
            return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 scripts/check_token.py <your_token>")
        print("–ü—Ä–∏–º–µ—Ä: python3 scripts/check_token.py ghp_xxxxxxxxxxxxxxxx")
        return
    
    token = sys.argv[1]
    
    print("üîç –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞")
    print("=" * 40)
    
    if check_token(token):
        print("\nüéâ –¢–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Render.")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º.")
        print("–°–º. GITHUB_TOKEN_SETUP.md –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.")

if __name__ == "__main__":
    main() 