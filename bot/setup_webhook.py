#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook'–∞ –≤ Telegram
"""
import os
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('env.example')

TELEGRAM_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
WEBHOOK_URL = "https://planfix-kpi-webhook.onrender.com/api/telegram_webhook"

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    if not TELEGRAM_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/setWebhook"
        data = {
            "url": WEBHOOK_URL,
            "allowed_updates": ["message"]
        }
        
        response = requests.post(url, json=data)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get('ok'):
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {WEBHOOK_URL}")
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description', 'N/A')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {result.get('description', 'Unknown error')}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def get_webhook_info():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º webhook'–µ"""
    if not TELEGRAM_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getWebhookInfo"
        response = requests.get(url)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get('ok'):
            webhook_info = result.get('result', {})
            print("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
            print(f"URL: {webhook_info.get('url', 'Not set')}")
            print(f"Pending updates: {webhook_info.get('pending_update_count', 0)}")
            print(f"Last error: {webhook_info.get('last_error_message', 'None')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('description', 'Unknown error')}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook'–∞ –¥–ª—è Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    print("\n1. –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
    get_webhook_info()
    
    print("\n2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook:")
    setup_webhook()
    
    print("\n3. –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
    get_webhook_info()
